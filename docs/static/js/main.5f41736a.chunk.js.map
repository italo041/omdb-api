{"version":3,"sources":["components/Movie.js","components/MoviesList.js","components/Title.js","helpers/fetchMovies.js","components/Pagination.js","components/SeachForm.js","pages/Home.js","components/ButtonBackToHome.js","pages/Detail.js","pages/NotFound.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Movie","id","title","year","poster","to","className","src","alt","MoviesList","movies","map","movie","key","imdbID","Title","Year","Poster","children","fetchMovies","inputMovie","a","page","fetch","process","resp","json","data","Pagination","props","onLeftClick","onRightClick","totalPages","onClick","role","aria-label","SeachForm","setResults","setUsedSearch","useState","setInputMovie","setPage","totalResults","setTotalResults","removeDuplicates","originalArray","prop","newArray","lookupObject","i","push","fetchData","Search","length","Math","ceil","console","log","_handleSubmit","e","preventDefault","lastPage","nextPage","max","min","useEffect","onSubmit","type","placeholder","onChange","target","value","Home","results","usedSearch","ButtonBackToHome","Detail","setMovie","_fetchMovie","dataMovie","movieId","match","params","Actors","Metascore","Plot","NotFound","style","color","fontSize","Navbar","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5f41736a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Movie = ({ id, title, year, poster }) => {\r\n  return (\r\n    <Link to={`/detail/${id}`} className=\"card\">\r\n      <div className=\"card-image animate__animated animate__fadeIn\">\r\n        <figure className=\"image animate__animated animate__fadeIn\">\r\n          {\r\n            poster \r\n            ? <img\r\n                className=\"animate__animated animate__fadeIn\"\r\n                src={poster === 'N/A' ? '/img/not_found_image.png' : poster}\r\n                alt={title} />\r\n            : null\r\n        \r\n          }\r\n        </figure>\r\n      </div>\r\n      <div className=\"card-content animate__animated animate__fadeIn\">\r\n        <div className=\"media\"> \r\n          <div className=\"media-content\">\r\n            <p className=\"title is-4\">{title}</p>\r\n            <p className=\"subtitle is-6\">{year}</p>\r\n          </div>\r\n        </div> \r\n        </div>\r\n    </Link>\r\n    \r\n  );\r\n};\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.string,\r\n  title: PropTypes.string,\r\n  year: PropTypes.string,\r\n  poster: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Movie } from './Movie';\r\n\r\nexport const MoviesList = ({movies}) => {\r\n    \r\n    return (\r\n            <div className=\"MoviesList \">\r\n                {\r\n                    movies.map((movie) => {\r\n                        return (\r\n                            movie\r\n                            ?   <div key={movie.imdbID} className=\"MoviesList-item animate__animated animate__fadeIn\" >\r\n                                    <Movie \r\n                                        id={movie.imdbID}\r\n                                        title={movie.Title}\r\n                                        year={movie.Year}\r\n                                        poster={movie.Poster}>   \r\n                            \r\n                                        {movie.Title}\r\n                                    </Movie>\r\n                                </div>\r\n                            : <div>Cargando...</div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nMoviesList.propTypes = {\r\n    movies: PropTypes.array\r\n}\r\n","import React from 'react'\r\n\r\nexport const Title = ({children}) => {\r\n    return (\r\n        <h1 className=\"title\">\r\n            {children}\r\n        </h1>\r\n    )\r\n}\r\n\r\n\r\n","\r\nexport const fetchMovies = async (inputMovie, page = 1) => {\r\n    try {   \r\n        const resp = await fetch(`http://www.omdbapi.com/?apikey=${process.env.REACT_APP_API_OMDB}&s=${inputMovie}&page=${page}`);\r\n        const data = await resp.json();\r\n        return data;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport const Pagination = (props) => {\r\n\r\n    const { onLeftClick, onRightClick, page, totalPages} = props;\r\n\r\n    return (\r\n        <div className=\"pagination\">\r\n            <button onClick={onLeftClick}><span role=\"img\" aria-label=\"Left-hand\">👈</span></button>\r\n            <div className=\"pagination-total-pages\">{page} de {totalPages}</div>\r\n            <button onClick={onRightClick}><span role=\"img\" aria-label=\"right-hand\">👉</span></button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { fetchMovies } from \"../helpers/fetchMovies\";\r\nimport { Pagination } from \"./Pagination\";\r\n\r\n\r\nexport const SeachForm = ({setResults, setUsedSearch}) => {\r\n    const [inputMovie, setInputMovie] = useState('')\r\n    const [page, setPage] = useState(1);\r\n    const [totalResults, setTotalResults] = useState(0); \r\n\r\n    const _handleChange = (e) => {\r\n        setInputMovie(e.target.value)\r\n    }\r\n\r\n    function removeDuplicates(originalArray, prop) {\r\n        var newArray = [];\r\n        var lookupObject  = {};\r\n   \r\n        for(var i in originalArray) {\r\n           lookupObject[originalArray[i][prop]] = originalArray[i];\r\n        }\r\n   \r\n        for(i in lookupObject) {\r\n            newArray.push(lookupObject[i]);\r\n        }\r\n         return newArray;\r\n    }\r\n    \r\n    const fetchData = async () => {\r\n        try {\r\n            const data = await fetchMovies(inputMovie, page) \r\n            const { Search = [], totalResults = 0 } = data;  \r\n            if(Search.length > 0) { \r\n                let data = removeDuplicates(Search,'imdbID') ;\r\n                setResults(data)   \r\n                setTotalResults(Math.ceil(totalResults / 10))\r\n            } \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const _handleSubmit = async (e) => {\r\n        e.preventDefault() \r\n        setUsedSearch(true)\r\n        await fetchData()\r\n        \r\n    }\r\n\r\n    const lastPage = async ()  => {\r\n        const nextPage = Math.max(page - 1, 1)\r\n        setPage(nextPage)\r\n    }\r\n\r\n    const nextPage = async () => {\r\n        const nextPage = Math.min(page + 1, totalResults)\r\n        setPage(nextPage)\r\n    } \r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [page])\r\n    \r\n  return (\r\n      <form onSubmit={_handleSubmit}>\r\n        <div className=\"field has-addons\">\r\n\r\n            <div className=\"control\">\r\n                <input className=\"input\" type=\"text\" placeholder=\"Movie to search\" onChange={_handleChange} />\r\n            </div>\r\n\r\n            <div className=\"control\">\r\n                <button className=\"button is-info\">Search</button>\r\n            </div>\r\n             \r\n        </div>\r\n        {\r\n            totalResults !== 0 \r\n            ? <Pagination \r\n                page={page} \r\n                totalPages={totalResults}\r\n                onLeftClick={lastPage}\r\n                onRightClick={nextPage}/>\r\n            : null\r\n        }\r\n      </form>\r\n  );\r\n};\r\n","import React, { useState } from \"react\"; \r\nimport { MoviesList } from '../components/MoviesList';\r\nimport { Title } from '../components/Title';\r\nimport { SeachForm } from '../components/SeachForm'; \r\n\r\n\r\nexport const Home = () => {\r\n  \r\n  const [results, setResults] = useState([]);\r\n  const [usedSearch, setUsedSearch] = useState(false);\r\n \r\n  \r\n  const _renderResults = () => {\r\n    if (results.length === 0) {\r\n        if (usedSearch) {\r\n            return <p>Movie not found <span role=\"img\" aria-label=\"sad-emoji\">🙁</span></p>;\r\n        }\r\n      return <p>Search movies!</p>;\r\n    }\r\n    return <MoviesList movies={results} />;\r\n  }; \r\n  \r\n  return (\r\n    <div className=\"container animate__animated animate__fadeIn\">\r\n      <Title >Search Movies</Title>\r\n      <div className=\"SearchForm-wrapper \">\r\n        <SeachForm setResults={setResults} setUsedSearch={setUsedSearch} />\r\n      </div>\r\n      {\r\n        _renderResults()\r\n      }\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const ButtonBackToHome = () => {\r\n    return (\r\n        <Link className='button is-info' to='/'>Volver a la portada</Link>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types' \r\nimport { ButtonBackToHome } from '../components/ButtonBackToHome'\r\n\r\nexport const Detail = (props) => {\r\n\r\n    const [movie, setMovie] = useState({})\r\n\r\n    const _fetchMovie = async (id) => {\r\n        try {\r\n            const resp = await fetch(`http://www.omdbapi.com/?apikey=${process.env.REACT_APP_API_OMDB}&i=${id}`);\r\n            const dataMovie = await resp.json();\r\n            setMovie(dataMovie)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    } \r\n     \r\n\r\n    useEffect(() => {\r\n        const { movieId } = props.match.params; \r\n        _fetchMovie(movieId)\r\n    }, [])\r\n\r\n    const { Title, Poster, Actors, Metascore, Plot } = movie;\r\n    \r\n\r\n    return (\r\n        <div className=\"container animate__animated animate__fadeIn\"> \r\n            <h1 className=\"title movie-title\">{Title}</h1>\r\n            <div className=\"detail\">\r\n                <img alt=\"Title\" src={Poster === 'N/A' ? '/img/not_found_image.png' : Poster} className=\"animate__animated animate__fadeIn\" />\r\n                <div className=\"text-detail\">\r\n                    <h3><strong>Actors:</strong> {Actors}</h3>\r\n                    <span><strong>Score:</strong> {Metascore}</span>\r\n                    <p><strong>Description:</strong> {Plot}</p>\r\n                    <div className=\"footer-detail\">\r\n                        <ButtonBackToHome />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nDetail.propTypes = {\r\n    match: PropTypes.shape({\r\n        params: PropTypes.object,\r\n        isExact: PropTypes.bool,\r\n        path: PropTypes.string,\r\n        url: PropTypes.string\r\n    })\r\n}\r\n","import React from 'react'\r\nimport { ButtonBackToHome } from '../components/ButtonBackToHome'\r\n\r\nexport const NotFound = () => {\r\n    return (\r\n        <did>\r\n            <h1 style={{color:'#000', fontSize:30}}>404!</h1>\r\n            <h2>Página no existe</h2>\r\n            <ButtonBackToHome />\r\n        </did>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\r\n            <div className=\"navbar-brand\">\r\n                <Link className=\"navbar-item\" to={'/'}>\r\n                    <h1 className=\"title is-4\">Buscador de peliculas <span role=\"img\" aria-label=\"camera\">🎥</span></h1>\r\n                </Link>\r\n         \r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React  from 'react';\nimport './App.css'; \nimport 'bulma/css/bulma.css'; \nimport { Home } from './pages/Home';\nimport { Switch, Route } from 'react-router-dom';\nimport { Detail } from './pages/Detail';\nimport { NotFound } from './pages/NotFound';\nimport { Navbar } from './components/Navbar';\n\nfunction App() {\n\n  return (\n    \n    <div className=\"App\">\n      <Navbar />\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route path='/detail/:movieId' component={Detail} />\n        <Route component={NotFound} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}